{"version":3,"sources":["components/Chart/styles.module.scss","components/StatBox/styles.module.scss","components/Icon/styles.module.scss","components/InfoBox/styles.module.scss","components/SearchInput/styles.module.scss","app.module.scss","components/Chart/index.tsx","components/Icon/index.tsx","components/SearchInput/index.tsx","components/InfoBox/index.tsx","components/CommonCard/index.tsx","components/Button/index.tsx","components/CategorySwitcher/index.tsx","components/ListItem/index.tsx","components/ListFigmaItem/index.tsx","components/StatBox/index.tsx","App.tsx","index.tsx","components/CommonCard/styles.module.scss","components/ListFigmaItem/styles.module.scss","components/CategorySwitcher/styles.module.scss","components/ListItem/styles.module.scss","components/Button/styles.module.scss"],"names":["module","exports","Chart","props","className","styles","wrap","ResponsiveContainer","width","height","LineChart","data","chart","CartesianGrid","XAxis","dataKey","tick","fontSize","fontFamily","YAxis","mirror","Tooltip","itemStyle","padding","fontWeight","labelStyle","Line","category","fill","stroke","dot","strokeWidth","defaultProps","lineChart","path","arrow","views","installs","likes","comments","duplicates","gh","user","enter","cross","Icon","viewBox","xmlns","fillRule","clipRule","d","name","SearchInput","inputRef","React","story","setStory","val","setVal","onSubmit","isError","console","log","form","errorInput","type","ref","autoFocus","value","onChange","e","target","placeholder","input","onKeyPress","key","preventDefault","gradienMask","gradienMaskError","button","hidden","errorButton","disabled","onClick","onClear","current","focus","errorMessage","InfoBox","counters","src","info","iconUrl","alt","pluginThumb","content","href","id","rel","title","link","textitem","publisherHandle","publisherName","counter","counterIcon","installCount","toLocaleString","duplicateCount","likeCount","commentCount","CommonCard","isLoading","loading","loadingTitle","loadingFlex","loadingText","children","Button","mode","label","sublabel","CategorySwitcher","categoryState","setCategoryState","handleClick","text","toLowerCase","replace","inactive","ListItem","valueWrap","icon","ListFigmaItem","wrapLeft","indexNum","index","imgLink","image","leftText","caption","wrapRight","count","StatBox","maxChartAmount","pluginsData","setPluginsData","users","pluginsTopsAmount","setPluginsTopsAmount","widgetsData","setWidgetsData","widgetsTopsAmount","setWidgetsTopsAmount","filesData","setFilesData","filesTopsAmount","setFilesTopsAmount","fetch","then","response","json","error","PluginsCards","totalAmount","plugins","total","commonList","topInstalls","slice","map","plugin","i","showMore","prevState","topLikes","topComments","topPopularUsers","publisherIcon","followers","FilesCards","files","topDuplicates","file","WidgetsCards","widgets","App","useState","idState","setIdState","latestCountersState","setLatestCountersState","allCountersState","setAllCountersState","infoState","setInfoState","errorState","setErrorState","fetchData","a","clearDataItem","item","date","split","reverse","join","splice","useEffect","main","ghButton","includes","cuttedLink","filter","handleSubmit","statBlock","footer","footerText","footerLink","document","cookie","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b5dbb1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__2_wVy\",\"chart\":\"styles_chart__30Ibu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__yi_w6\",\"total\":\"styles_total__3dKgy\",\"commonList\":\"styles_commonList__3_Lun\",\"showMore\":\"styles_showMore__2ApsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__1AutR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__2N57w\",\"pluginThumb\":\"styles_pluginThumb__2Zjga\",\"content\":\"styles_content__3WiOH\",\"title\":\"styles_title__1u3jB\",\"textitem\":\"styles_textitem__1487S\",\"counters\":\"styles_counters__zujYh\",\"counter\":\"styles_counter__2IHYS\",\"counterIcon\":\"styles_counterIcon__3m2SF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__124Wx\",\"form\":\"styles_form__2pyLC\",\"input\":\"styles_input__2MZ3o\",\"gradienMask\":\"styles_gradienMask__1BzkS\",\"gradienMaskError\":\"styles_gradienMaskError__1YbYY\",\"button\":\"styles_button__3uOo8\",\"errorButton\":\"styles_errorButton__3m3Ur\",\"cross\":\"styles_cross__y-q8d\",\"enter\":\"styles_enter__o4axy\",\"errorMessage\":\"styles_errorMessage__C0V9x\",\"errorInput\":\"styles_errorInput__3jBCm\",\"errorAnimation\":\"styles_errorAnimation__1j2eq\",\"hidden\":\"styles_hidden__H_h7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__1NOZK\",\"wrap\":\"app_wrap__2GHul\",\"ghButton\":\"app_ghButton__1qao1\",\"statBlock\":\"app_statBlock__2z9Fj\",\"footer\":\"app_footer__2vzCe\",\"footerText\":\"app_footerText__EKVI3\",\"footerLink\":\"app_footerLink__3BBkb\"};","import * as React from \"react\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  YAxis,\n  XAxis,\n  ResponsiveContainer,\n  Tooltip,\n} from \"recharts\";\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  data: Array<any>;\n  category: string;\n}\n\nconst Chart: React.FunctionComponent<Props> = (props) => {\n  return (\n    <section className={styles.wrap}>\n      <ResponsiveContainer width={\"100%\"} height={240}>\n        <LineChart data={props.data} className={styles.chart}>\n          <CartesianGrid />\n          <XAxis dataKey=\"date\" tick={{ fontSize: 12, fontFamily: \"Inter\" }} />\n          <YAxis mirror tick={{ fontSize: 12, fontFamily: \"Inter\" }} />\n          <Tooltip\n            itemStyle={\n              {\n                padding: \"4px\",\n                fontWeight: 600,\n                fontSize: 16,\n              } as React.CSSProperties\n            }\n            labelStyle={\n              {\n                fontSize: 16,\n                fontWeight: 700,\n                padding: \"4px\",\n              } as React.CSSProperties\n            }\n          />\n          <Line\n            dataKey={\n              props.category === \"plugins\" || props.category === \"widgets\"\n                ? \"installs\"\n                : \"duplicates\"\n            }\n            fill={\"var(--chart-2-clr)\"}\n            stroke={\"var(--chart-2-clr)\"}\n            dot={false}\n            strokeWidth={2}\n          />\n          <Line\n            dataKey={\"likes\"}\n            fill={\"var(--chart-3-clr)\"}\n            stroke={\"var(--chart-3-clr)\"}\n            dot={false}\n            strokeWidth={2}\n          />\n          <Line\n            dataKey={\"comments\"}\n            fill={\"var(--chart-4-clr)\"}\n            stroke={\"var(--chart-4-clr)\"}\n            dot={false}\n            strokeWidth={2}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </section>\n  );\n};\n\nChart.defaultProps = {\n  lineChart: false,\n} as Partial<Props>;\n\nexport default Chart;\n","import * as React from \"react\";\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  name?: IconProps[\"name\"];\n  className?: string;\n}\n\nconst path: any = {\n  arrow:\n    \"M12.9142 1.30006L23.4001 12L12.9142 22.6999L11.4858 21.3001L19.6199 13H1V11H19.6199L11.4858 2.69992L12.9142 1.30006Z\",\n  views:\n    \"M3 12C7.09091 2.66666 16.9091 2.66667 21 12C16.9091 21.3333 7.09091 21.3333 3 12ZM12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\",\n  installs:\n    \"M20 4H4V20H20V4ZM11 8V11.8127H7.30164L12 16.3972L16.6984 11.8127H13V8H11Z\",\n  likes:\n    \"M4.34285 5.40442C2.55239 7.27699 2.55238 10.313 4.34284 12.1856L12 20L19.6572 12.1856C21.4476 10.313 21.4476 7.27699 19.6572 5.40442C17.8667 3.53186 14.9638 3.53186 13.1733 5.40442L12 6.63155L10.8267 5.40442C9.03622 3.53186 6.13331 3.53186 4.34285 5.40442Z\",\n  comments: \"M4 4H20V20L14.7619 17.1429H4V4ZM17 7H7V9H17V7ZM12 11H7V13H12V11Z\",\n  duplicates: \"M16 4H4V16H8V20H20V8H16V4ZM16 10V16H10V18H18V10H16Z\",\n  gh: \"M12 0C5.374 0 0 5.373 0 12C0 17.302 3.438 21.8 8.207 23.387C8.806 23.498 9 23.126 9 22.81V20.576C5.662 21.302 4.967 19.16 4.967 19.16C4.421 17.773 3.634 17.404 3.634 17.404C2.545 16.659 3.717 16.675 3.717 16.675C4.922 16.759 5.556 17.912 5.556 17.912C6.626 19.746 8.363 19.216 9.048 18.909C9.155 18.134 9.466 17.604 9.81 17.305C7.145 17 4.343 15.971 4.343 11.374C4.343 10.063 4.812 8.993 5.579 8.153C5.455 7.85 5.044 6.629 5.696 4.977C5.696 4.977 6.704 4.655 8.997 6.207C9.954 5.941 10.98 5.808 12 5.803C13.02 5.808 14.047 5.941 15.006 6.207C17.297 4.655 18.303 4.977 18.303 4.977C18.956 6.63 18.545 7.851 18.421 8.153C19.191 8.993 19.656 10.064 19.656 11.374C19.656 15.983 16.849 16.998 14.177 17.295C14.607 17.667 15 18.397 15 19.517V22.81C15 23.129 15.192 23.504 15.801 23.386C20.566 21.797 24 17.3 24 12C24 5.373 18.627 0 12 0Z\",\n  user: \"M16 8C16 10.2091 14.2091 12 12 12C9.79086 12 8 10.2091 8 8C8 5.79086 9.79086 4 12 4C14.2091 4 16 5.79086 16 8Z M5 14H19V20H5V14Z\",\n  enter: \"M20 1.5V17H7V13L0 18L7 23V19H22V1.5H20Z\",\n  cross:\n    \"M10.5859 12L3.29297 4.70711L4.70718 3.29289L12.0001 10.5858L19.293 3.29289L20.7072 4.70711L13.4143 12L20.7072 19.2929L19.293 20.7071L12.0001 13.4142L4.70718 20.7071L3.29297 19.2929L10.5859 12Z\",\n};\n\nconst Icon: React.FunctionComponent<Props> = (props) => {\n  return (\n    <i className={`${styles.wrap} ${props.className}`}>\n      <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d={props.name ? path[props.name] : null}\n        />\n      </svg>\n    </i>\n  );\n};\n\nIcon.defaultProps = {\n  name: \"arrow\",\n  className: \"\",\n} as Partial<Props>;\n\nexport default Icon;\n","import * as React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport Icon from \"../../components/Icon\";\n\ninterface Props {\n  className?: string;\n  isError?: boolean;\n  onSubmit: (value: string) => void;\n  onClear: () => void;\n}\n\nconst SearchInput: React.FunctionComponent<Props> = (props) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const [story, setStory] = React.useState(0);\n  const [val, setVal] = React.useState(\"\");\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setVal(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (props.isError) {\n      console.log(\"error\");\n      setStory(story + 1);\n    }\n    props.onSubmit(val);\n  };\n\n  const onClear = (e: React.MouseEvent) => {\n    props.onClear();\n    setVal(\"\");\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <section className={styles.wrap} key={story}>\n      <div\n        className={`${styles.form} ${props.className} ${\n          props.isError ? styles.errorInput : \"\"\n        }`}\n      >\n        <input\n          type=\"text\"\n          ref={inputRef}\n          autoFocus\n          value={val}\n          onChange={onChange}\n          placeholder={\"Paste a link to a plugin, widget or file\"}\n          className={styles.input}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              onSubmit();\n            }\n          }}\n        />\n\n        <div\n          className={`${styles.gradienMask} ${\n            props.isError ? styles.gradienMaskError : \"\"\n          }`}\n        />\n\n        <button\n          className={`${styles.button} ${styles.cross} ${\n            val !== \"\" ? \"\" : styles.hidden\n          } ${props.isError ? styles.errorButton : \"\"}`}\n          disabled={val === \"\" ? true : false}\n          onClick={onClear}\n        >\n          <Icon name=\"cross\" />\n        </button>\n        <button\n          className={`${styles.button} ${styles.enter} ${\n            props.isError ? styles.errorButton : \"\"\n          }`}\n          disabled={val === \"\" ? true : false}\n          onClick={(e) => {\n            e.preventDefault();\n            onSubmit();\n          }}\n        >\n          <Icon name=\"enter\" />\n        </button>\n      </div>\n\n      {props.isError ? (\n        <div className={styles.errorMessage}>\n          Oops! Can't find it. Сheck the link for typos.\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nSearchInput.defaultProps = {\n  className: \"\",\n} as Partial<Props>;\n\nexport default SearchInput;\n","import * as React from \"react\";\nimport Icon from \"../Icon\";\n\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  info: any;\n  counters: any;\n  className?: string;\n  category: string;\n}\n\nconst InfoBox: React.FunctionComponent<Props> = (props) => {\n  console.log(props.counters);\n\n  return (\n    <section className={styles.wrap}>\n      {props.category === \"plugins\" ? (\n        <img\n          src={props.info.iconUrl}\n          alt=\"preview\"\n          className={styles.pluginThumb}\n        />\n      ) : null}\n      <div className={styles.content}>\n        <a\n          href={`https://www.figma.com/community/${\n            props.category === \"plugins\" ? \"plugin\" : \"file\"\n          }/${props.info.id}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={`${styles.title} ${styles.link}`}\n        >\n          {props.info.name}\n        </a>\n\n        <div className={styles.textitem}>\n          <span>by </span>\n          <a\n            href={`https://www.figma.com/@${props.info.publisherHandle}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className={`${styles.link}`}\n          >\n            {props.info.publisherName}\n          </a>\n        </div>\n\n        <div className={styles.counters}>\n          {/* <div className={styles.counter}>\n            <Icon className={styles.counterIcon} name=\"views\" />\n            <span>{props.counters.viewCount.toLocaleString()}</span>\n          </div> */}\n\n          {props.category === \"plugins\" || props.category === \"widgets\" ? (\n            <div className={styles.counter}>\n              <Icon className={styles.counterIcon} name=\"installs\" />\n              <span>{props.counters.installCount.toLocaleString()}</span>\n            </div>\n          ) : (\n            <div className={styles.counter}>\n              <Icon className={styles.counterIcon} name=\"duplicates\" />\n              <span>{props.counters.duplicateCount.toLocaleString()}</span>\n            </div>\n          )}\n\n          <div className={styles.counter}>\n            <Icon className={styles.counterIcon} name=\"likes\" />\n            <span>{props.counters.likeCount.toLocaleString()}</span>\n          </div>\n          <div className={styles.counter}>\n            <Icon className={styles.counterIcon} name=\"comments\" />\n            <span>{props.counters.commentCount.toLocaleString()}</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nInfoBox.defaultProps = {\n  className: \"\",\n} as Partial<Props>;\n\nexport default InfoBox;\n","import * as React from \"react\";\n\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  title?: string | boolean;\n  isLoading?: boolean;\n  className?: string;\n}\n\nconst CommonCard: React.FunctionComponent<Props> = (props) => {\n  return (\n    <section className={styles.wrap}>\n      {!props.isLoading ? (\n        <>\n          {props.title ? <h2 className={styles.title}>{props.title}</h2> : null}\n          {props.children}\n        </>\n      ) : (\n        <>\n          <div className={`${styles.loading} ${styles.loadingTitle}`} />\n          <div className={`${styles.loadingFlex}`}>\n            <div className={`${styles.loading} ${styles.loadingText}`} />\n            <div className={`${styles.loading} ${styles.loadingText}`} />\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nCommonCard.defaultProps = {\n  className: \"\",\n  isLoading: false,\n  title: false,\n} as Partial<Props>;\n\nexport default CommonCard;\n","import * as React from \"react\";\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  label: string;\n  sublabel?: string;\n  className?: string;\n  mode?: \"primary\" | \"secondary\" | \"ghost\";\n  disabled?: boolean;\n  onClick: (value: string) => void;\n}\n\nconst Button: React.FunctionComponent<Props> = (props) => {\n  return (\n    <button\n      disabled={props.disabled}\n      className={`${styles.wrap} ${props.className} ${styles[`${props.mode}`]}`}\n      onClick={() => props.onClick(props.label)}\n    >\n      <span className={styles.label}>{props.label}</span>\n      {props.sublabel !== \"\" ? (\n        <span className={styles.sublabel}>{props.sublabel}</span>\n      ) : null}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  label: \"label\",\n  sublabel: \"\",\n  className: \"\",\n  mode: \"primary\",\n  disabled: false,\n} as Partial<Props>;\n\nexport default Button;\n","import * as React from \"react\";\nimport Button from \"../Button\";\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  className?: string;\n  onClick: (val: string) => void;\n}\n\nconst CategorySwitcher: React.FunctionComponent<Props> = (props) => {\n  const [categoryState, setCategoryState] = React.useState(\"plugins\");\n\n  const handleClick = (text: string) => {\n    const value = text.toLowerCase().replace(/\\s+/g, \"_\");\n    setCategoryState(value);\n    props.onClick(value);\n  };\n\n  return (\n    <div className={`${styles.wrap} ${props.className}`}>\n      <Button\n        label=\"Plugins\"\n        onClick={handleClick}\n        mode={categoryState === \"plugins\" ? \"secondary\" : \"ghost\"}\n        className={`${styles.button} ${\n          categoryState === \"plugins\" ? styles.inactive : \"\"\n        }`}\n      />\n      <Button\n        label=\"Widgets\"\n        onClick={handleClick}\n        mode={categoryState === \"widgets\" ? \"secondary\" : \"ghost\"}\n        className={`${styles.button} ${\n          categoryState === \"widgets\" ? styles.inactive : \"\"\n        }`}\n      />\n      <Button\n        label=\"Hub Files\"\n        onClick={handleClick}\n        mode={categoryState === \"hub_files\" ? \"secondary\" : \"ghost\"}\n        className={`${styles.button} ${\n          categoryState === \"hub_files\" ? styles.inactive : \"\"\n        }`}\n      />\n    </div>\n  );\n};\n\nCategorySwitcher.defaultProps = {\n  className: \"\",\n} as Partial<Props>;\n\nexport default CategorySwitcher;\n","import * as React from \"react\";\nimport Icon from \"../Icon\";\n\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  label?: string;\n  value?: string;\n  icon?: IconProps[\"name\"];\n  className?: string;\n}\n\nconst ListItem: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div className={`${styles.wrap} ${props.className}`}>\n      <span className={styles.label}>{props.label}:</span>\n      <div className={styles.valueWrap}>\n        <Icon name={props.icon} className={styles.icon} />\n        <span className={styles.value}>{props.value}</span>\n      </div>\n    </div>\n  );\n};\n\nListItem.defaultProps = {\n  label: \"label\",\n  value: \"value\",\n  className: \"\",\n} as Partial<Props>;\n\nexport default ListItem;\n","import * as React from \"react\";\nimport Icon from \"../Icon\";\n\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  label?: {\n    name: string;\n    link: string;\n  };\n  caption?: {\n    name: string;\n    link: string;\n  };\n  count?: number;\n  index?: number;\n  imgLink?: string;\n  icon?: IconProps[\"name\"];\n  className?: string;\n}\n\nconst ListFigmaItem: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div className={`${styles.wrap} ${props.className}`}>\n      <div className={styles.wrapLeft}>\n        <span className={styles.indexNum}>{props.index}.</span>\n        {props.imgLink !== \"\" ? (\n          <img src={props.imgLink} alt=\"preview\" className={styles.image} />\n        ) : null}\n        <div className={styles.leftText}>\n          <a\n            className={styles.label}\n            href={props.label?.link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {props.label?.name}\n          </a>\n          {props.caption?.name !== \"\" ? (\n            <div className={styles.caption}>\n              <span>by </span>\n              <a href={props.caption?.link} target=\"_blank\" rel=\"noreferrer\">\n                {props.caption?.name}\n              </a>\n            </div>\n          ) : null}\n        </div>\n      </div>\n      <div className={styles.wrapRight}>\n        <span className={styles.count}>{props.count}</span>\n        <Icon name={props.icon} />\n      </div>\n    </div>\n  );\n};\n\nListFigmaItem.defaultProps = {\n  caption: {\n    name: \"\",\n    link: \"#\",\n  },\n  label: {\n    name: \"label\",\n    link: \"#\",\n  },\n  index: 0,\n  imgLink: \"\",\n  className: \"\",\n} as Partial<Props>;\n\nexport default ListFigmaItem;\n","import * as React from \"react\";\nimport CommonCard from \"../CommonCard\";\nimport CategorySwitcher from \"../CategorySwitcher\";\nimport ListItem from \"../ListItem\";\nimport ListFigmaItem from \"../ListFigmaItem\";\nimport Button from \"../Button\";\n\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  className?: string;\n}\n\nconst StatBox: React.FunctionComponent<Props> = (props) => {\n  const initialCategory = \"plugins\";\n  const initialShowedItems = 5;\n  const maxChartAmount = 50;\n\n  const [categoryState, setCategoryState] = React.useState(initialCategory);\n\n  const [pluginsData, setPluginsData] = React.useState<any>();\n  const [pluginsTopsAmount, setPluginsTopsAmount] = React.useState<{\n    installs: number;\n    views: number;\n    likes: number;\n    comments: number;\n    users: number;\n  }>({\n    installs: initialShowedItems,\n    views: initialShowedItems,\n    likes: initialShowedItems,\n    comments: initialShowedItems,\n    users: initialShowedItems,\n  });\n\n  const [widgetsData, setWidgetsData] = React.useState<any>();\n  const [widgetsTopsAmount, setWidgetsTopsAmount] = React.useState<{\n    installs: number;\n    views: number;\n    likes: number;\n    comments: number;\n    users: number;\n  }>({\n    installs: initialShowedItems,\n    views: initialShowedItems,\n    likes: initialShowedItems,\n    comments: initialShowedItems,\n    users: initialShowedItems,\n  });\n\n  const [filesData, setFilesData] = React.useState<any>();\n  const [filesTopsAmount, setFilesTopsAmount] = React.useState<{\n    duplicates: number;\n    views: number;\n    likes: number;\n    comments: number;\n    users: number;\n  }>({\n    duplicates: initialShowedItems,\n    views: initialShowedItems,\n    likes: initialShowedItems,\n    comments: initialShowedItems,\n    users: initialShowedItems,\n  });\n\n  ///////////////////////////////////////////////\n\n  React.useEffect(() => {\n    try {\n      fetch(`https://pavellaptev.github.io/figma-stat/plugins/common.json`)\n        .then((response) => response.json())\n        .then((pluginsData) => {\n          console.log(pluginsData);\n          setPluginsData(pluginsData);\n        });\n\n      fetch(`https://pavellaptev.github.io/figma-stat/hub_files/common.json`)\n        .then((response) => response.json())\n        .then((filesData) => {\n          console.log(filesData);\n          setFilesData(filesData);\n        });\n\n      fetch(`https://pavellaptev.github.io/figma-stat/widgets/common.json`)\n        .then((response) => response.json())\n        .then((widgetsData) => {\n          console.log(widgetsData);\n          setWidgetsData(widgetsData);\n        });\n    } catch (error) {\n      console.error(`Oops! Can't fetch plugins`);\n    }\n  }, []);\n\n  ///////////////////////////////////////////////\n\n  const PluginsCards = () => {\n    if (pluginsData) {\n      return (\n        <>\n          <CommonCard\n            title={`${pluginsData.totalAmount.plugins.toLocaleString()} plugins`}\n          >\n            <div className={styles.total}>\n              <ListItem\n                label=\"Installs\"\n                icon=\"installs\"\n                value={pluginsData.totalAmount.installs.toLocaleString()}\n              />\n              {/* <ListItem\n                label=\"Views\"\n                icon=\"views\"\n                value={pluginsData.totalAmount.views.toLocaleString()}\n              /> */}\n              <ListItem\n                label=\"Likes\"\n                icon=\"likes\"\n                value={pluginsData.totalAmount.likes.toLocaleString()}\n              />\n              <ListItem\n                label=\"Comments\"\n                icon=\"comments\"\n                value={pluginsData.totalAmount.comments.toLocaleString()}\n              />\n            </div>\n          </CommonCard>\n\n          <CommonCard title={`Top by installs`}>\n            <div className={styles.commonList}>\n              {pluginsData.topInstalls\n                .slice(0, pluginsTopsAmount.installs)\n                .map((plugin: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      imgLink={plugin.icon}\n                      icon=\"installs\"\n                      label={{\n                        name: plugin.name,\n                        link: `https://www.figma.com/community/plugin/${plugin.id}`,\n                      }}\n                      caption={{\n                        name: plugin.publisherName,\n                        link: `https://www.figma.com/@${plugin.publisherHandle}`,\n                      }}\n                      count={plugin.installs.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={pluginsTopsAmount.installs === maxChartAmount}\n              onClick={() =>\n                setPluginsTopsAmount((prevState) => ({\n                  ...prevState,\n                  installs: pluginsTopsAmount.installs + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Top by likes`}>\n            <div className={styles.commonList}>\n              {pluginsData.topLikes\n                .slice(0, pluginsTopsAmount.likes)\n                .map((plugin: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      imgLink={plugin.icon}\n                      icon=\"likes\"\n                      label={{\n                        name: plugin.name,\n                        link: `https://www.figma.com/community/plugin/${plugin.id}`,\n                      }}\n                      caption={{\n                        name: plugin.publisherName,\n                        link: `https://www.figma.com/@${plugin.publisherHandle}`,\n                      }}\n                      count={plugin.likes.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={pluginsTopsAmount.likes >= maxChartAmount}\n              onClick={() =>\n                setPluginsTopsAmount((prevState) => ({\n                  ...prevState,\n                  likes: pluginsTopsAmount.likes + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Top by comments`}>\n            <div className={styles.commonList}>\n              {pluginsData.topComments\n                .slice(0, pluginsTopsAmount.comments)\n                .map((plugin: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      imgLink={plugin.icon}\n                      icon=\"comments\"\n                      label={{\n                        name: plugin.name,\n                        link: `https://www.figma.com/community/plugin/${plugin.id}`,\n                      }}\n                      caption={{\n                        name: plugin.publisherName,\n                        link: `https://www.figma.com/@${plugin.publisherHandle}`,\n                      }}\n                      count={plugin.comments.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={pluginsTopsAmount.comments >= maxChartAmount}\n              onClick={() =>\n                setPluginsTopsAmount((prevState) => ({\n                  ...prevState,\n                  comments: pluginsTopsAmount.comments + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Popular plugin makers`}>\n            <div className={styles.commonList}>\n              {pluginsData.topPopularUsers\n                .slice(0, pluginsTopsAmount.users)\n                .map((user: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      imgLink={user.publisherIcon}\n                      icon=\"user\"\n                      label={{\n                        name: user.name,\n                        link: `https://www.figma.com/@${user.publisherHandle}`,\n                      }}\n                      count={user.followers.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={pluginsTopsAmount.users >= maxChartAmount}\n              onClick={() =>\n                setPluginsTopsAmount((prevState) => ({\n                  ...prevState,\n                  users: pluginsTopsAmount.users + 5,\n                }))\n              }\n            />\n          </CommonCard>\n        </>\n      );\n    } else {\n      return <CommonCard isLoading />;\n    }\n  };\n\n  const FilesCards = () => {\n    if (filesData) {\n      return (\n        <>\n          <CommonCard\n            title={`${filesData.totalAmount.files.toLocaleString()} files`}\n          >\n            <div className={styles.total}>\n              <ListItem\n                label=\"duplicates\"\n                icon=\"duplicates\"\n                value={filesData.totalAmount.duplicates.toLocaleString()}\n              />\n              {/* <ListItem\n                label=\"Views\"\n                icon=\"views\"\n                value={filesData.totalAmount.views.toLocaleString()}\n              /> */}\n              <ListItem\n                label=\"Likes\"\n                icon=\"likes\"\n                value={filesData.totalAmount.likes.toLocaleString()}\n              />\n              <ListItem\n                label=\"Comments\"\n                icon=\"comments\"\n                value={filesData.totalAmount.comments.toLocaleString()}\n              />\n            </div>\n          </CommonCard>\n\n          <CommonCard title={`Top by duplicates`}>\n            <div className={styles.commonList}>\n              {filesData.topDuplicates\n                .slice(0, filesTopsAmount.duplicates)\n                .map((file: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      icon=\"duplicates\"\n                      label={{\n                        name: file.name,\n                        link: `https://www.figma.com/community/file/${file.id}`,\n                      }}\n                      caption={{\n                        name: file.publisherName,\n                        link: `https://www.figma.com/@${file.publisherHandle}`,\n                      }}\n                      count={file.duplicates.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={filesTopsAmount.duplicates >= maxChartAmount}\n              onClick={() =>\n                setFilesTopsAmount((prevState) => ({\n                  ...prevState,\n                  duplicates: filesTopsAmount.duplicates + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Top by likes`}>\n            <div className={styles.commonList}>\n              {filesData.topLikes\n                .slice(0, filesTopsAmount.likes)\n                .map((file: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      icon=\"likes\"\n                      label={{\n                        name: file.name,\n                        link: `https://www.figma.com/community/file/${file.id}`,\n                      }}\n                      caption={{\n                        name: file.publisherName,\n                        link: `https://www.figma.com/@${file.publisherHandle}`,\n                      }}\n                      count={file.likes.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={filesTopsAmount.likes >= maxChartAmount}\n              onClick={() =>\n                setFilesTopsAmount((prevState) => ({\n                  ...prevState,\n                  likes: filesTopsAmount.likes + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Top by comments`}>\n            <div className={styles.commonList}>\n              {filesData.topComments\n                .slice(0, filesTopsAmount.comments)\n                .map((file: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      icon=\"comments\"\n                      label={{\n                        name: file.name,\n                        link: `https://www.figma.com/community/file/${file.id}`,\n                      }}\n                      caption={{\n                        name: file.publisherName,\n                        link: `https://www.figma.com/@${file.publisherHandle}`,\n                      }}\n                      count={file.comments.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={filesTopsAmount.comments >= maxChartAmount}\n              onClick={() =>\n                setFilesTopsAmount((prevState) => ({\n                  ...prevState,\n                  comments: filesTopsAmount.comments + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Popular file makers`}>\n            <div className={styles.commonList}>\n              {filesData.topPopularUsers\n                .slice(0, filesTopsAmount.users)\n                .map((user: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      imgLink={user.publisherIcon}\n                      icon=\"user\"\n                      label={{\n                        name: user.name,\n                        link: `https://www.figma.com/@${user.publisherHandle}`,\n                      }}\n                      count={user.followers.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={filesTopsAmount.users >= maxChartAmount}\n              onClick={() =>\n                setFilesTopsAmount((prevState) => ({\n                  ...prevState,\n                  users: filesTopsAmount.users + 5,\n                }))\n              }\n            />\n          </CommonCard>\n        </>\n      );\n    } else {\n      return <CommonCard isLoading />;\n    }\n  };\n\n  const WidgetsCards = () => {\n    if (widgetsData) {\n      return (\n        <>\n          <CommonCard\n            title={`${widgetsData.totalAmount.widgets.toLocaleString()} widgets`}\n          >\n            <div className={styles.total}>\n              <ListItem\n                label=\"installs\"\n                icon=\"installs\"\n                value={widgetsData.totalAmount.installs.toLocaleString()}\n              />\n              {/* <ListItem\n                label=\"Views\"\n                icon=\"views\"\n                value={widgetsData.totalAmount.views.toLocaleString()}\n              /> */}\n              <ListItem\n                label=\"Likes\"\n                icon=\"likes\"\n                value={widgetsData.totalAmount.likes.toLocaleString()}\n              />\n              <ListItem\n                label=\"Comments\"\n                icon=\"comments\"\n                value={widgetsData.totalAmount.comments.toLocaleString()}\n              />\n            </div>\n          </CommonCard>\n\n          <CommonCard title={`Top by installs`}>\n            <div className={styles.commonList}>\n              {widgetsData.topInstalls\n                .slice(0, widgetsTopsAmount.installs)\n                .map((file: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      icon=\"installs\"\n                      label={{\n                        name: file.name,\n                        link: `https://www.figma.com/community/widget/${file.id}`,\n                      }}\n                      caption={{\n                        name: file.publisherName,\n                        link: `https://www.figma.com/@${file.publisherHandle}`,\n                      }}\n                      count={file.installs.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={widgetsTopsAmount.installs >= maxChartAmount}\n              onClick={() =>\n                setWidgetsTopsAmount((prevState) => ({\n                  ...prevState,\n                  installs: widgetsTopsAmount.installs + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Top by likes`}>\n            <div className={styles.commonList}>\n              {widgetsData.topLikes\n                .slice(0, widgetsTopsAmount.likes)\n                .map((file: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      icon=\"likes\"\n                      label={{\n                        name: file.name,\n                        link: `https://www.figma.com/community/widget/${file.id}`,\n                      }}\n                      caption={{\n                        name: file.publisherName,\n                        link: `https://www.figma.com/@${file.publisherHandle}`,\n                      }}\n                      count={file.likes.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={widgetsTopsAmount.likes >= maxChartAmount}\n              onClick={() =>\n                setWidgetsTopsAmount((prevState) => ({\n                  ...prevState,\n                  likes: widgetsTopsAmount.likes + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Top by comments`}>\n            <div className={styles.commonList}>\n              {widgetsData.topComments\n                .slice(0, widgetsTopsAmount.comments)\n                .map((file: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      icon=\"comments\"\n                      label={{\n                        name: file.name,\n                        link: `https://www.figma.com/community/widget/${file.id}`,\n                      }}\n                      caption={{\n                        name: file.publisherName,\n                        link: `https://www.figma.com/@${file.publisherHandle}`,\n                      }}\n                      count={file.comments.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={widgetsTopsAmount.comments >= maxChartAmount}\n              onClick={() =>\n                setWidgetsTopsAmount((prevState) => ({\n                  ...prevState,\n                  comments: widgetsTopsAmount.comments + 5,\n                }))\n              }\n            />\n          </CommonCard>\n\n          <CommonCard title={`Popular widgets makers`}>\n            <div className={styles.commonList}>\n              {widgetsData.topPopularUsers\n                .slice(0, widgetsTopsAmount.users)\n                .map((user: any, i: number) => {\n                  return (\n                    <ListFigmaItem\n                      key={i}\n                      index={i + 1}\n                      imgLink={user.publisherIcon}\n                      icon=\"user\"\n                      label={{\n                        name: user.name,\n                        link: `https://www.figma.com/@${user.publisherHandle}`,\n                      }}\n                      count={user.followers.toLocaleString()}\n                    />\n                  );\n                })}\n            </div>\n            <Button\n              label={\"Show more\"}\n              mode={\"primary\"}\n              className={styles.showMore}\n              disabled={widgetsTopsAmount.users >= maxChartAmount}\n              onClick={() =>\n                setWidgetsTopsAmount((prevState) => ({\n                  ...prevState,\n                  users: widgetsTopsAmount.users + 5,\n                }))\n              }\n            />\n          </CommonCard>\n        </>\n      );\n    } else {\n      return <CommonCard isLoading />;\n    }\n  };\n\n  const showData = () => {\n    if (categoryState === \"plugins\") {\n      return <PluginsCards />;\n    }\n    if (categoryState === \"widgets\") {\n      return <WidgetsCards />;\n    }\n    if (categoryState === \"hub_files\") {\n      return <FilesCards />;\n    }\n  };\n\n  return (\n    <>\n      <CategorySwitcher\n        onClick={(value) => {\n          setCategoryState(value);\n        }}\n      />\n      <section className={`${styles.wrap} ${props.className}`}>\n        {showData()}\n      </section>\n    </>\n  );\n};\n\nStatBox.defaultProps = {\n  className: \"\",\n} as Partial<Props>;\n\nexport default StatBox;\n","import React from \"react\";\nimport Chart from \"./components/Chart\";\nimport SearchInput from \"./components/SearchInput\";\nimport InfoBox from \"./components/InfoBox\";\nimport Icon from \"./components/Icon\";\nimport StatBox from \"./components/StatBox\";\n\nimport styles from \"./app.module.scss\";\n\nconst App = () => {\n  const [idState, setIdState] = React.useState(\"\");\n  const [categoryState, setCategoryState] = React.useState(\"plugins\");\n\n  const [latestCountersState, setLatestCountersState] = React.useState(\n    null as any\n  );\n  const [allCountersState, setAllCountersState] = React.useState(null as any);\n  const [infoState, setInfoState] = React.useState(null as any);\n\n  const [errorState, setErrorState] = React.useState(false);\n\n  /////////////////////////////////////////////\n\n  const handleSubmit = (value: string) => {\n    if (value.includes(\"figma.com/community\")) {\n      setErrorState(false);\n\n      const cuttedLink = value\n        .split(\"community\")[1]\n        .split(\"/\")\n        .filter((item) => item);\n\n      if (cuttedLink[0] === \"plugin\") {\n        setCategoryState(\"plugins\");\n      }\n      if (cuttedLink[0] === \"widget\") {\n        setCategoryState(\"widgets\");\n      }\n      if (cuttedLink[0] === \"file\") {\n        setCategoryState(\"hub_files\");\n      }\n\n      setIdState(cuttedLink[1]);\n    } else {\n      setErrorState(true);\n    }\n  };\n\n  const fetchData = async (id: string, category: string) => {\n    const link = {\n      info: `https://pavellaptev.github.io/figma-stat/${category}/${id}/info.json`,\n      counters: `https://pavellaptev.github.io/figma-stat/${category}/${id}/counters.json`,\n    };\n\n    try {\n      await fetch(link.counters)\n        .then((response) => response.json())\n        .then((data) => {\n          setErrorState(false);\n\n          const clearDataItem = () => {\n            return data\n              .map((item: any, i: any) => {\n                if (data[i - 1]) {\n                  return {\n                    date: item.date.split(\"-\").reverse().join(\".\"),\n                    [category === \"plugins\" || category === \"widgets\"\n                      ? \"installs\"\n                      : \"duplicates\"]:\n                      category === \"plugins\" || category === \"widgets\"\n                        ? item[\"installCount\"] - data[i - 1][\"installCount\"]\n                        : item[\"duplicateCount\"] -\n                          data[i - 1][\"duplicateCount\"],\n                    views: item[\"viewCount\"] - data[i - 1][\"viewCount\"],\n                    likes: item[\"likeCount\"] - data[i - 1][\"likeCount\"],\n                    comments:\n                      item[\"commentCount\"] - data[i - 1][\"commentCount\"],\n                  };\n                }\n                return null;\n              })\n              .splice(1);\n          };\n\n          setLatestCountersState(data.slice(-1)[0]);\n          setAllCountersState(clearDataItem());\n\n          console.log(clearDataItem());\n        });\n\n      await fetch(link.info)\n        .then((response) => response.json())\n        .then((data) => {\n          setInfoState(data);\n        });\n    } catch (error) {\n      setErrorState(true);\n      console.error(`Oops! Seems like there is no file with this ID yet`);\n    }\n  };\n\n  const Bars = () => {\n    if (allCountersState && infoState) {\n      return (\n        <section className={styles.statBlock}>\n          <InfoBox\n            counters={latestCountersState}\n            info={infoState}\n            category={categoryState}\n          />\n          <Chart data={allCountersState} category={categoryState} />\n        </section>\n      );\n    }\n\n    return <StatBox />;\n  };\n\n  /////////////////////////////////////////////\n\n  React.useEffect(() => {\n    if (idState !== \"\") {\n      fetchData(idState, categoryState);\n    }\n  }, [idState, categoryState]);\n\n  /////////////////////////////////////////////\n\n  return (\n    <main className={`${styles.main} lightTheme`}>\n      <a\n        className={styles.ghButton}\n        href=\"https://github.com/PavelLaptev/figma-stat\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n      >\n        <Icon name=\"gh\" />\n      </a>\n\n      <section className={styles.wrap}>\n        <h1>Figma Charts</h1>\n        <SearchInput\n          isError={errorState}\n          onSubmit={(value) => {\n            handleSubmit(value);\n          }}\n          onClear={() => {\n            setErrorState(false);\n            setAllCountersState(\"\");\n            setIdState(\"\");\n          }}\n        />\n\n        {Bars()}\n\n        <footer className={styles.footer}>\n          <p className={styles.footerText}>\n            Everyday at 6 am (UTC timezone) the github script captures all\n            avalible Figma plugins, files and widgets data. All information is\n            stored in a separate{\" \"}\n            <a\n              className={styles.footerLink}\n              href=\"https://github.com/PavelLaptev/figma-stat/tree/gh-pages\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              github branch\n            </a>{\" \"}\n            and divided into three folders —{\" \"}\n            <a\n              className={styles.footerLink}\n              href=\"https://github.com/PavelLaptev/figma-stat/tree/gh-pages/plugins\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              plugins\n            </a>\n            ,{\" \"}\n            <a\n              className={styles.footerLink}\n              href=\"https://github.com/PavelLaptev/figma-stat/tree/gh-pages/hub_files\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              hub_files\n            </a>{\" \"}\n            and{\" \"}\n            <a\n              className={styles.footerLink}\n              href=\"https://github.com/PavelLaptev/figma-stat/tree/gh-pages/widgets\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              widgets\n            </a>\n            .\n          </p>\n          <p className={styles.footerText}>\n            You can read more about and how to use this stats in{\" \"}\n            <a\n              className={styles.footerLink}\n              href=\"https://github.com/PavelLaptev/figma-stat\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              the main branch of the repository\n            </a>\n            .\n          </p>\n        </footer>\n      </section>\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\n// Set a cross-site cookie for third-party contexts\ndocument.cookie = \"cookie2=value2; SameSite=None; Secure\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__3Bh0q\",\"title\":\"styles_title__1DYic\",\"loading\":\"styles_loading__2OQ_-\",\"positionAnimation\":\"styles_positionAnimation__3asB4\",\"loadingFlex\":\"styles_loadingFlex__2VMS2\",\"loadingTitle\":\"styles_loadingTitle__32FdG\",\"loadingText\":\"styles_loadingText__1s4Ha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__1HgTC\",\"wrapLeft\":\"styles_wrapLeft__3jTzh\",\"leftText\":\"styles_leftText__D4eIe\",\"wrapRight\":\"styles_wrapRight__XCZWI\",\"image\":\"styles_image__qqce_\",\"label\":\"styles_label__2nB3v\",\"caption\":\"styles_caption__2nrML\",\"count\":\"styles_count__l3vg-\",\"indexNum\":\"styles_indexNum__1LomY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__AGH7w\",\"button\":\"styles_button__1A3dd\",\"back\":\"styles_back__1sxmU\",\"inactive\":\"styles_inactive__3pCE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__1bmiT\",\"icon\":\"styles_icon__1c7wN\",\"label\":\"styles_label__1-YNe\",\"valueWrap\":\"styles_valueWrap__2wtP2\",\"value\":\"styles_value__38wXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__JVLAe\",\"label\":\"styles_label__3C0AY\",\"sublabel\":\"styles_sublabel__1jx_7\",\"primary\":\"styles_primary__3HQ5-\",\"secondary\":\"styles_secondary__2pJ5d\",\"ghost\":\"styles_ghost__31QWH\"};"],"sourceRoot":""}